draft SDK callback response for auth gear

* Problem

skygear next uses two gears to handle a user's state.

*** auth gear

- user role, disable state, verify state, etc.
- principal (how a user can login, e.g. (username/email) + password)

*** record gear (optional)

- user profile

* Affected components

- auth gear
- record gear
- SDK (JS/iOS/Android)

* Considerations

- easy to understand
- hope a developer won't need to read the manual before use it
- pattern can apply to future design

* Options 1
- profile record is part of `currentUser`
  +-------------------------------+
  |                               |
  |  [currentUser <coreUser>]     |
  |  username                     |
  |  email                        |
  |  disabled                     |
  |  verified                     |
  |  ......                       |
  |                               |
  |  +------------------------+   |
  |  | [ profile <record> ]   |   |
  |  | username               |   |
  |  | email                  |   |
  |  | phone                  |   |
  |  | .....                  |   |
  |  +------------------------+   |
  |                               |
  +-------------------------------+

* Options 2
- keep current design, return is a `record`
  +--------------------------+
  |                          |
  | [ currentUser <record> ] |
  | username                 |
  | email                    |
  | phone                    |
  | .....                    |
  |                          |
  +--------------------------+

* usage of option 1

  skygear.auth.currentUser; // core user + user record
  skygear.auth.currentUser.profile; // user record

   // auth info
  skygear.auth.currentUser['disabled'];
  skygear.auth.currentUser['verified'];

  // profile info
  skygear.auth.currentUser.profile['phone'];

  // update record
  skygear.auth.currentUser['username'] = 'new-username';
  skygear.auth.currentUser.profile['phone'] = 'new-phone';
  skygear.auth.updateUser(skygear.auth.currentUser);

* usage of option 2

  skygear.auth.currentUser; // user record

  // auth info
  skygear.auth.isCurrentUserVerified;
  skygear.auth.isCurrentUserDisabled;

  // profile info
  const phone = skygear.auth.currentUser['phone'];

  // update record
  skygear.auth.currentUser['username'] = 'new-username';
  skygear.auth.currentUser['phone'] = 'new-phone';
  skygear.auth.updateUser(skygear.auth.currentUser);

* [option 1] Q: A user may be confused which data type to use in SDK.

  // which attribute should I update?
  skygear.auth.currentUser['username'];
  skygear.auth.currentUser.profile['username'];

  // which data type should I passed?
  skygear.auth.adminResetPassword(user<coreUser>, newPassword);
  skygear.auth.adminResetPassword(user<userRecord>, newPassword);

* [option 2] Q: What if record gear isn't configured?

  // It would be very weird if record gear won't configured
  // take signup as an example
  skygear.auth.signupWithUsername(username, password).then((result) => {
      // result === null;
      // when record gear is *not* configured
  });
  skygear.auth.signupWithUsername(username, password).then((result) => {
      // result !== not null;
      // when record gear is configured
  });

* [option 2] Q: What if record gear isn't configured?

  // what data type to be passed to SDK when record is not configured?
  skygear.auth.adminResetPassword(user<???>, newPassword);
  skygear.auth.adminResetPassword(user<userRecord>, newPassword);

* [option 2] Q: need other API to get user auth info

  // may need other API to get other user's auth info
  skyger.auth.isUserDisabled(user<userRecord>).then(disabled => {
    console.log(disabled);
  });
  // also, don't know how to handle it when record gear is not configured
  skyger.auth.isUserDisabled(user<???>).then(disabled => {
    console.log(disabled);
  });